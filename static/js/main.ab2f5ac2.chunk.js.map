{"version":3,"sources":["components/FormSelect.js","components/Output.js","components/Form.js","App.js","index.js"],"names":["FormSelect","props","useContext","FormContext","formData","formOptions","formOther","handleFormChange","htmlFor","name","className","toUpperCase","length","value","onChange","map","option","placeholder","Output","formDataPrettier","make","model","year","finish","bodyType","countryOfOrigin","serial","condition","weight","bodyWood","scaleLength","neckWood","neckJoint","fingerBoard","neckFinish","neckProfile","radius","inlays","nut","nutWidth","frets","pickups","pickguard","pickupConfiguration","switches","controls","hardware","tuningMachines","bridge","knobs","stringGuage","modifications","otherFeatures","guitarCase","Object","keys","data","createContext","setFormData","Form","useState","setFormOther","Provider","e","register","target","match","registerOther","split","onSubmit","preventDefault","d","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab2f5ac2.chunk.js","sourcesContent":["import { useContext } from \"react\";\r\nimport { FormContext } from \"./Form\";\r\n\r\n\r\n\r\nconst FormSelect = (props) => {\r\n\r\n    const {formData, formOptions, formOther, handleFormChange} = useContext(FormContext)\r\n\r\nreturn (\r\n    <div>\r\n        <label htmlFor={props.name} name='hello'>\r\n            <span className='w-[12rem] inline-block'>{(props.name).toUpperCase()}:</span> \r\n            {formOptions[props.name].length>0?(\r\n                <select className='w-[12rem]' name={props.name} value={formData[props.name] || 'select...'} onChange={handleFormChange}>\r\n                    <option value=''>select...</option>\r\n                    {formOptions[props.name].map(option => (<option key={option+'opt'}>{option}</option>))}\r\n                    <option >Other</option>\r\n                </select>\r\n            ) : (\r\n                <input placeholder={props.name.toUpperCase()} className='px-1 border-black border-solid border-[1px] my-[1px]' name={props.name} value={formData[props.name] || ''} onChange={handleFormChange} />\r\n            )}\r\n            \r\n        </label>\r\n            {formData[props.name] === 'Other' ? (\r\n                <input placeholder={props.name.toUpperCase()} className='px-1 ml-[12rem] border-black border-solid border-[1px] my-[1px]' name={`other.${props.name}`} value={formOther[props.name]} onChange={handleFormChange}/>\r\n                ) : null}\r\n            \r\n    </div>\r\n)\r\n}\r\n\r\n\r\nexport default FormSelect;","import React, {useContext} from 'react';\r\nimport { FormContext } from './Form';\r\n\r\nconst Output = (props) => {\r\n\r\n    const {formData, formDataPrettier, formOther} = useContext(FormContext)\r\n\r\n    const {\r\n        make,\r\n        model,\r\n        year,\r\n        finish,\r\n        countryOfOrigin,\r\n        serial,\r\n        condition,\r\n        weight,\r\n        bodyType,\r\n        bodyWood,\r\n        scaleLength,\r\n        neckJoint,\r\n        neckWood,\r\n        neckFinish,\r\n        fingerBoard,\r\n        radius,\r\n        neckProfile,\r\n        inlays,\r\n        nutWidth,\r\n        nut,\r\n        frets,\r\n        pickups,\r\n        pickupConfiguration,\r\n        pickguard,\r\n        controls,\r\n        switches,\r\n        hardware,\r\n        tuningMachines,\r\n        bridge,\r\n        knobs,\r\n        modifications,\r\n        otherFeatures,\r\n        stringGuage,\r\n        guitarCase\r\n    } = formData;\r\n\r\nreturn(\r\n    <div className={`${props.className} font-bold`}>\r\n        <p className='mb-8'>\r\n        {make || 'MAKE'} {model || 'MODEL'} in {finish || 'FINISH'} finish made in {year || 'YEAR'}{guitarCase?` with ${guitarCase || 'CASE'}`:null}. \r\n        <br/>\r\n        <br/>\r\n        This guitar features a {bodyType || 'BODYTYPE'} {bodyWood || 'BODYWOOD'} Body, {neckWood || 'NECKWOOD'} neck and {fingerBoard || 'FINGERBOARD'} Fingerboard. Equipped with {pickups || 'PICKUPS'}. Controlled by {knobs || 'KNOBS'} knobs and {switches || 'SWITCH'}. The {scaleLength || 'SCALELENGTH'} scale length neck has {inlays?`${inlays || 'INLAYS'} inlays and `:null}{frets || 'FRETS'} frets with a {neckProfile || 'NECKPROFILE'} neck profile. The hardware is comprised of {tuningMachines || 'TUNINGMACHINES'}, a {nut || 'NUT'} Nut,{!hardware?` and`:null} a {bridge || 'BRIDGE'} bridge{hardware?` with ${hardware || 'HARDWARE'}`:null}{pickguard?` on a ${pickguard || 'PICKGUARD'} pickguard`:null}.\r\n        \r\n        \r\n        <br />\r\n        <br />\r\n        [FLAVORTEXT]\r\n        <br />\r\n        <br />\r\n        Guitar is freshly setup and restrung with {stringGuage || 'GUAGE'} strings{guitarCase?` and includes ${guitarCase || 'CASE'} case`:null}.\r\n        </p>\r\n        <ul className='list-disc'>\r\n            {Object.keys(formData).map(data => {if(formData[data]){return(<li className=''  key={'li'+data}>{formDataPrettier[data] || data}: {formOther[data] || formData[data]}</li>)}else{return null}})}\r\n        </ul>\r\n    </div>    \r\n)\r\n}\r\n\r\nexport default Output","import React, { createContext, useState } from 'react';\r\nimport FormSelect from './FormSelect';\r\nimport Output from './Output';\r\n\r\nconst Form = () => {\r\n    const formOptions = {\r\n        make:['Fender', 'Gibson', 'Jackson'],\r\n        model:[],\r\n        year:[],\r\n        finish:[],\r\n        countryOfOrigin:['the USA', 'Mexico', 'Japan'],\r\n        serial:[],\r\n        condition:['Mint', 'Excellent', 'Very Good', 'Good'],\r\n        weight:[],\r\n        bodyType:['Solid', 'Semi-Hollow', 'Hollow'],\r\n        bodyWood:['Alder', 'Ash', 'Basswood', 'Mahogany', 'Maple', 'Korina'],\r\n        scaleLength:[25.5, 24.75, 24, 24.5, 25, 26.5, 27 ],\r\n        neckJoint:['Set neck', 'Bolt-on', 'Neck-through'],\r\n        neckWood:['Alder', 'Ash', 'Basswood', 'Mahogany', 'Maple', 'Korina', 'Rosewood'],\r\n        neckFinish:[],\r\n        fingerBoard:['Rosewood', 'Ebony', 'Maple', 'Pau Ferro', 'Richlite'],\r\n        radius:[7.25, 9.5, 10, 11.5, 12, 14, 15, 16, 20, 24, 'Flat'],\r\n        neckProfile:['C', 'Chunky C', 'D', 'V', 'U', 'Hard V', 'BB', 'Asymmetrical'],\r\n        inlays:[],\r\n        nutWidth:['1.745', '1.6875' ],\r\n        nut:['Synthetic Bone', 'Composite Bone', 'Tektoid'],\r\n        frets:[],\r\n        pickups:[],\r\n        pickupConfiguration:[],\r\n        pickguard:[],\r\n        controls:[],\r\n        switches:[],\r\n        hardware:[],\r\n        tuningMachines:[],\r\n        bridge:[],\r\n        knobs:[],\r\n        modifications:[],\r\n        otherFeatures:[],\r\n        stringGuage:['10-46', '9-42'],\r\n        guitarCase:[],\r\n    }\r\n    const formDataPrettier = {\r\n        make:'Make',\r\n        model:'Model',\r\n        year:'Year',\r\n        finish:'Finish',\r\n        countryOfOrigin:'Country of Origin',\r\n        serial:'Serial #',\r\n        condition:'Condition',\r\n        weight:'Weight',\r\n        bodyType:'Body Type',\r\n        bodyWood:'Body Wood',\r\n        scaleLength:'Scale Length',\r\n        neckJoint:'Neck Joint',\r\n        neckWood:'Neck Wood',\r\n        neckFinish:'Neck Finish',\r\n        fingerBoard:'Finger Board',\r\n        radius:'Neck Radius',\r\n        neckProfile:'Neck Profile',\r\n        inlays:'Inlays',\r\n        nutWidth:'Nut Width',\r\n        nut:'Nut',\r\n        frets:'Frets',\r\n        pickups:'Pickups',\r\n        pickupConfiguration:'Pickup Configuration',\r\n        pickguard:'Pickguard',\r\n        controls:'Controls',\r\n        switches:'Switch',\r\n        hardware:'Hardware',\r\n        tuningMachines:'Tuning Machines',\r\n        bridge:'Bridge',\r\n        knobs:'Knobs',\r\n        modifications:'Modifications',\r\n        otherFeatures:'Other Features',\r\n        stringGuage:'String Guage',\r\n        guitarCase:'Case'\r\n    }\r\n    const [formOther, setFormOther] = useState({\r\n        make:'',\r\n        model:'',\r\n        year:'',\r\n        finish:'',\r\n        countryOfOrigin:'',\r\n        serial:'',\r\n        condition:'',\r\n        weight:'',\r\n        bodyType:'',\r\n        bodyWood:'',\r\n        scaleLength:'',\r\n        neckJoint:'',\r\n        neckWood:'',\r\n        neckFinish:'',\r\n        fingerBoard:'',\r\n        radius:'',\r\n        neckProfile:'',\r\n        inlays:'',\r\n        nutWidth:'',\r\n        nut:'',\r\n        frets:'',\r\n        pickups:'',\r\n        pickupConfiguration:'',\r\n        pickguard:'',\r\n        controls:'',\r\n        switches:'',\r\n        hardware:'',\r\n        tuningMachines:'',\r\n        bridge:'',\r\n        knobs:'',\r\n        modifications:'',\r\n        otherFeatures:'',\r\n        stringGuage:'',\r\n        guitarCase:''\r\n    })\r\n    const [formData, setFormData] = useState({\r\n        make:'',\r\n        model:'',\r\n        year:'',\r\n        finish:'',\r\n        countryOfOrigin:'',\r\n        serial:'',\r\n        condition:'',\r\n        weight:'',\r\n        bodyType:'',\r\n        bodyWood:'',\r\n        scaleLength:'',\r\n        neckJoint:'',\r\n        neckWood:'',\r\n        neckFinish:'',\r\n        fingerBoard:'',\r\n        radius:'',\r\n        neckProfile:'',\r\n        inlays:'',\r\n        nutWidth:'',\r\n        nut:'',\r\n        frets:'',\r\n        pickups:'',\r\n        pickupConfiguration:'',\r\n        pickguard:'',\r\n        controls:'',\r\n        switches:'',\r\n        hardware:'',\r\n        tuningMachines:'',\r\n        bridge:'',\r\n        knobs:'',\r\n        modifications:'',\r\n        otherFeatures:'',\r\n        stringGuage:'',\r\n        guitarCase:''\r\n    })\r\n\r\n    const handleFormChange = (e) => {\r\n        const register = e.target.name;\r\n        const value = e.target.value;\r\n        if(register.match('other.')){\r\n            const registerOther = register.split('.')[1];\r\n            // console.log('setting formOther')\r\n            setFormOther({...formOther, [registerOther]:value});\r\n            // console.log(formOther)\r\n        }else{\r\n            // console.log('setting formData')\r\n            setFormData({...formData, [register]:value});\r\n            // console.log(formData)\r\n        }\r\n    }\r\n\r\nreturn(\r\n    <FormContext.Provider value={{formData, formDataPrettier, formOptions, formOther, setFormData, setFormOther, handleFormChange}}>\r\n    <div className='flex flex-row p-4'>\r\n    <form className='flex-1 w-6/12' onSubmit={e => e.preventDefault()}>\r\n        \r\n        {Object.keys(formData).map(d => (<FormSelect name={d} key={d}/>))}\r\n        \r\n    </form>\r\n    <Output className='flex-1 w-6/12'/>\r\n    </div>\r\n    </FormContext.Provider>\r\n);\r\n}\r\n\r\nconst FormContext = createContext({\r\n    formData: {},\r\n    formOptions: {},\r\n    setFormData:()=>{},\r\n    handleFormChange: () => {}\r\n})\r\n\r\nexport {FormContext};\r\n\r\nexport default Form;","import Form from './components/Form'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}