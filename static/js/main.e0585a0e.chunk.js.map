{"version":3,"sources":["components/FormSelect.js","components/List.js","components/Descriptions/SetupMessage.js","components/Descriptions.js","components/Description.js","components/Output.js","components/Form.js","App.js","index.js"],"names":["FormSelect","props","useContext","FormContext","formData","formOptions","formOther","handleFormChange","htmlFor","name","className","toUpperCase","length","value","onChange","map","option","placeholder","List","formDataPrettier","Object","keys","data","SetupMessage","stringGauge","guitarCase","insertSpacer","Description1","formDataCopy","forEach","label","make","model","year","finish","bodyType","bodyWood","scaleLength","neckWood","fingerBoard","neckProfile","inlays","nut","frets","pickups","pickguard","controls","switches","hardware","tuningMachines","bridge","knobs","match","Description2","Description","number","Output","useState","template","setTemplate","event","target","console","log","createContext","setFormData","Form","countryOfOrigin","serial","condition","weight","neckJoint","neckFinish","radius","nutWidth","sort","a","b","pickupConfiguration","modifications","otherFeatures","setFormOther","Provider","e","register","registerOther","split","onSubmit","preventDefault","d","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0585a0e.chunk.js","sourcesContent":["import { useContext } from \"react\";\r\nimport { FormContext } from \"./Form\";\r\n\r\nconst FormSelect = (props) => {\r\n    const { formData, formOptions, formOther, handleFormChange } =\r\n        useContext(FormContext);\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor={props.name} name=\"hello\">\r\n                <span className=\"w-[12rem] inline-block font-bold\">\r\n                    {props.name.toUpperCase()}:\r\n                </span>\r\n                {formOptions[props.name].length > 0 ? (\r\n                    <select\r\n                        className=\"mb-2 w-[12rem] bg-black text-white\"\r\n                        name={props.name}\r\n                        value={formData[props.name] || \"select...\"}\r\n                        onChange={handleFormChange}\r\n                    >\r\n                        <option value=\"\">select...</option>\r\n                        {formOptions[props.name].map((option) => (\r\n                            <option key={option + \"opt\"}>{option}</option>\r\n                        ))}\r\n                        <option>Other</option>\r\n                    </select>\r\n                ) : (\r\n                    <input\r\n                        placeholder={props.name.toUpperCase()}\r\n                        className=\"px-1 border-black border-solid border-[1px] my-[1px] bg-black bg-opacity-90 text-white\"\r\n                        name={props.name}\r\n                        value={formData[props.name] || \"\"}\r\n                        onChange={handleFormChange}\r\n                    />\r\n                )}\r\n            </label>\r\n            {formData[props.name] === \"Other\" ? (\r\n                <>\r\n                    <br />\r\n                    <input\r\n                        placeholder={props.name.toUpperCase()}\r\n                        className=\"px-1 ml-[12rem] border-black border-solid border-[1px] my-[1px] bg-black bg-opacity-90 text-white\"\r\n                        name={`other.${props.name}`}\r\n                        value={formOther[props.name]}\r\n                        onChange={handleFormChange}\r\n                    />\r\n                </>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormSelect;\r\n","import React, { useContext } from \"react\";\r\nimport { FormContext } from \"./Form\"\r\n\r\n\r\nconst List = (props) => {\r\n\r\n    const {formData, formDataPrettier, formOther} = useContext(FormContext)\r\n    \r\n    return (\r\n        <ul className='list-disc'>\r\n            {Object.keys(formData).map(data => {if(formData[data]){return(<li className=''  key={'li'+data}>{formDataPrettier[data] || data}: {formOther[data] || formData[data]}{data==='scaleLength'||data==='nutWidth'?`\"`:null}</li>)}else{return null}})}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List;","import React from \"react\";\r\n\r\nconst SetupMessage = (props) => {\r\n    const { stringGauge, guitarCase } = props;\r\n\r\n    return (\r\n        <span>\r\n            Guitar is freshly setup and restrung with {stringGauge || \"GAUGE\"}{\" \"}\r\n            strings{guitarCase ? ` and includes ${guitarCase || \"CASE\"}` : null}\r\n            .\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default SetupMessage;\r\n","import React, { useContext } from \"react\";\r\nimport SetupMessage from \"./Descriptions/SetupMessage\";\r\nimport { FormContext } from \"./Form\";\r\n\r\nconst insertSpacer = () => {\r\n    return (\r\n        <>\r\n            <br />\r\n            <br />\r\n            [FLAVORTEXT]\r\n            <br />\r\n            <br />\r\n        </>\r\n    );\r\n};\r\n\r\nconst Description1 = (props) => {\r\n    const { formData, formOther } = useContext(FormContext);\r\n\r\n    let formDataCopy = { ...formData };\r\n    Object.keys(formDataCopy).forEach((label) => {\r\n        if (formData[label] === \"Other\") {\r\n            formDataCopy[label] = formOther[label];\r\n        }\r\n    });\r\n\r\n    let {\r\n        make,\r\n        model,\r\n        year,\r\n        finish,\r\n        bodyType,\r\n        bodyWood,\r\n        scaleLength,\r\n        neckWood,\r\n        fingerBoard,\r\n        neckProfile,\r\n        inlays,\r\n        nut,\r\n        frets,\r\n        pickups,\r\n        pickguard,\r\n        controls,\r\n        switches,\r\n        hardware,\r\n        tuningMachines,\r\n        bridge,\r\n        knobs,\r\n        stringGauge,\r\n        guitarCase,\r\n    } = formDataCopy;\r\n\r\n    return (\r\n        <p className=\"mb-8\">\r\n            {make || \"MAKE\"} {model || \"MODEL\"} {finish || \"FINISH\"}{\" \"}\r\n            {year || \"YEAR\"}\r\n            {guitarCase ? ` with ${guitarCase || \"CASE\"}` : null}.\r\n            <br />\r\n            <br />\r\n            This guitar features a {bodyType || \"BODYTYPE\"}{\" \"}\r\n            {bodyWood || \"BODYWOOD\"} Body,{\" \"}\r\n            {/**neckFinish?`${neckFinish || 'NECKFINISH'} `:null*/}\r\n            {neckWood || \"NECKWOOD\"} neck and{\" \"}\r\n            {neckWood.toUpperCase() !== fingerBoard.toUpperCase()\r\n                ? `${fingerBoard || \"FINGERBOARD\"} `\r\n                : null}\r\n            fingerboard. Equipped with {pickups || \"PICKUPS\"}. Controlled by{\" \"}\r\n            {controls || \"CONTROLS\"} knob\r\n            {controls !== \"One Master Volume\" ? \"s\" : null} and{\" \"}\r\n            {switches || \"SWITCH\"}. The {scaleLength || \"SCALELENGTH\"}\" scale\r\n            length neck has{\" \"}\r\n            {inlays ? `${inlays || \"INLAYS\"} inlays and ` : null}\r\n            {frets || \"FRETS\"} frets with a {neckProfile || \"NECKPROFILE\"} neck\r\n            profile. The hardware is comprised of{\" \"}\r\n            {(tuningMachines || \"TUNINGMACHINES\") + \" tuning machines, \"}a{\" \"}\r\n            {nut || \"NUT\"} Nut,{!hardware ? ` and` : null} a{\" \"}\r\n            {bridge || \"BRIDGE\"}\r\n            {bridge.match(\"bridge\") || bridge.match(\"Bridge\")\r\n                ? null\r\n                : ` bridge`}\r\n            ,{knobs ? ` with ${(knobs || \"KNOBS\") + \" Knobs\"}` : null}\r\n            {pickguard ? ` on a ${pickguard || \"PICKGUARD\"} pickguard` : null}.\r\n            <br />\r\n            <br />\r\n            <SetupMessage stringGauge={stringGauge} guitarCase={guitarCase} />\r\n        </p>\r\n    );\r\n};\r\n\r\nconst Description2 = (props) => {\r\n    const { formData, formOther } = useContext(FormContext);\r\n\r\n    let formDataCopy = { ...formData };\r\n    Object.keys(formDataCopy).forEach((label) => {\r\n        if (formData[label] === \"Other\") {\r\n            formDataCopy[label] = formOther[label];\r\n        }\r\n    });\r\n\r\n    let {\r\n        make,\r\n        model,\r\n        year,\r\n        finish,\r\n        bodyType,\r\n        bodyWood,\r\n        scaleLength,\r\n        neckWood,\r\n        fingerBoard,\r\n        neckProfile,\r\n        inlays,\r\n        nut,\r\n        frets,\r\n        pickups,\r\n        pickguard,\r\n        controls,\r\n        switches,\r\n        hardware,\r\n        tuningMachines,\r\n        bridge,\r\n        knobs,\r\n        stringGauge,\r\n        guitarCase,\r\n    } = formDataCopy;\r\n\r\n    return (\r\n        <p className=\"mb-8\">\r\n            {make || \"MAKE\"} {model || \"MODEL\"} {finish || \"FINISH\"}{\" \"}\r\n            {year || \"YEAR\"}\r\n            {guitarCase ? ` with ${guitarCase || \"CASE\"}` : null}.\r\n            {insertSpacer()}\r\n            This guitar features a {bodyType || \"BODYTYPE\"}{\" \"}\r\n            {bodyWood || \"BODYWOOD\"} Body,{\" \"}\r\n            {/**neckFinish?`${neckFinish || 'NECKFINISH'} `:null*/}\r\n            {neckWood || \"NECKWOOD\"} neck and{\" \"}\r\n            {neckWood.toUpperCase() !== fingerBoard.toUpperCase()\r\n                ? `${fingerBoard || \"FINGERBOARD\"} `\r\n                : null}\r\n            fingerboard. Equipped with {pickups || \"PICKUPS\"}. Controlled by{\" \"}\r\n            {controls || \"CONTROLS\"} knobs and {switches || \"SWITCH\"}. The{\" \"}\r\n            {scaleLength || \"SCALELENGTH\"}\" scale length neck has{\" \"}\r\n            {inlays ? `${inlays || \"INLAYS\"} inlays and ` : null}\r\n            {frets || \"FRETS\"} frets with a {neckProfile || \"NECKPROFILE\"} neck\r\n            profile. The hardware is comprised of{\" \"}\r\n            {(tuningMachines || \"TUNINGMACHINES\") + \" tuning machines, \"}a{\" \"}\r\n            {nut || \"NUT\"} Nut,{!hardware ? ` and` : null} a{\" \"}\r\n            {bridge || \"BRIDGE\"}\r\n            {bridge.match(\"bridge\") || bridge.match(\"Bridge\")\r\n                ? null\r\n                : ` bridge`}\r\n            ,{knobs ? ` with ${(knobs || \"KNOBS\") + \" Knobs\"}` : null}\r\n            {pickguard ? ` on a ${pickguard || \"PICKGUARD\"} pickguard` : null}.\r\n            {insertSpacer()}\r\n            <SetupMessage stringGauge={stringGauge} guitarCase={guitarCase} />\r\n        </p>\r\n    );\r\n};\r\n\r\nexport { Description1, Description2 };\r\n","import React from \"react\";\r\nimport { Description1, Description2 } from \"./Descriptions\";\r\n\r\nconst Description = (props) => {\r\n\r\n    const {number} = props;\r\n\r\n    const renderSwitch = () => {\r\n        switch(number){\r\n            case '1':\r\n            return (\r\n                <Description1 {...props}/>\r\n            )\r\n            case '2':\r\n            return (\r\n                <Description2 {...props} />\r\n            )\r\n            default: \r\n            return (\r\n                <Description1 {...props}/>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        { renderSwitch() }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Description","import React, {useState} from 'react';\r\nimport List from './List'\r\nimport Description from './Description'\r\n\r\nconst Output = (props) => {\r\n\r\n    const [template, setTemplate] = useState(1)\r\n\r\n    const templateHandler = (event) => {\r\n        setTemplate(event.target.value)\r\n        console.log(`template set to ${event.target.value}`)\r\n    }\r\n\r\nreturn(\r\n    <div className={`${props.className}`}>\r\n    <div>\r\n        <label>\r\n            Template:\r\n        <select onChange={templateHandler} value={template} className='ml-4 bg-black'>\r\n            <option value='1'>HILDING</option>\r\n            <option value='2'>2</option>\r\n        </select>\r\n        </label>\r\n    </div>\r\n    <br/>\r\n    <div className={`font-bold`}>\r\n        <Description number={template} />\r\n        <List />\r\n    </div>    \r\n    </div>\r\n)\r\n}\r\n\r\nexport default Output","import React, { createContext, useState } from \"react\";\r\nimport FormSelect from \"./FormSelect\";\r\nimport Output from \"./Output\";\r\n\r\nconst Form = () => {\r\n    const formOptions = {\r\n        make: [\r\n            \"Fender\",\r\n            \"Gibson\",\r\n            \"Jackson\",\r\n            \"PRS\",\r\n            \"Washburn\",\r\n            \"ESP\",\r\n            \"Gretch\",\r\n            \"G&L\",\r\n            \"Knaggs\",\r\n            \"Ibanez\",\r\n            \"Epiphone\",\r\n            \"Schecter\",\r\n            \"Caparison\",\r\n        ],\r\n        model: [],\r\n        year: [],\r\n        finish: [],\r\n        countryOfOrigin: [\"USA\", \"Mexico\", \"Japan\"],\r\n        serial: [],\r\n        condition: [\"Mint\", \"Excellent\", \"Very Good\", \"Good\"],\r\n        weight: [],\r\n        bodyType: [\"Solid\", \"Semi-Hollow\", \"Hollow\"],\r\n        bodyWood: [\r\n            \"Alder\",\r\n            \"Ash\",\r\n            \"Mahogany\",\r\n            \"Korina\",\r\n            \"Poplar\",\r\n            \"Maple\",\r\n            \"Rosewood\",\r\n            \"Koa\",\r\n            \"Basswood\",\r\n            \"Walnut\",\r\n        ],\r\n        scaleLength: [25.5, 24.75, 24, 24.5, 25, 26.5, 27],\r\n        neckJoint: [\"Bolt-on\", \"Set Neck\", \"Neck-through\"],\r\n        neckWood: [\r\n            \"Maple\",\r\n            \"Koa\",\r\n            \"Rosewood\",\r\n            \"Mahogany\",\r\n            \"Wenge\",\r\n            \"Walnut\",\r\n            \"Korina\",\r\n            \"Purpleheart\",\r\n        ],\r\n        neckFinish: [],\r\n        fingerBoard: [\r\n            \"Maple\",\r\n            \"Rosewood\",\r\n            \"Ebony\",\r\n            \"Pau Ferro\",\r\n            \"Laurel\",\r\n            \"Wenge\",\r\n            \"Walnut\",\r\n            \"Blackwood\",\r\n        ],\r\n        radius: [7.25, 9.5, 10, 12, 14, 15, 16, 20, \"Flat\"],\r\n        neckProfile: [\r\n            \"Modern C\",\r\n            \"Chunky C\",\r\n            \"C\",\r\n            \"D\",\r\n            \"V\",\r\n            \"U\",\r\n            \"Hard V\",\r\n            \"BB\",\r\n            \"Asymmetrical\",\r\n            \"Pattern\",\r\n        ],\r\n        inlays: [\r\n            \"Pearloid Dot\",\r\n            \"Abalone Dot\",\r\n            \"Black Dot\",\r\n            \"White Dot\",\r\n            \"Pearloid Trapezoid\",\r\n            \"Abalone Trapezoid\",\r\n            \"Sharkfin\",\r\n            \"Reverse Sharkfin\",\r\n            \"Pearloid Rectangle\",\r\n            \"Abalone Rectangle\",\r\n        ],\r\n        nutWidth: [\r\n            1.6875, 1.685, 1.656, 1.6, 1.65, 1.625, 1.575, 1.687, 1.69, 1.66,\r\n            1.695,\r\n        ].sort((a, b) => a - b),\r\n        nut: [\r\n            \"Bone\",\r\n            \"Fossil Ivory\",\r\n            \"Plastic\",\r\n            \"Graphite\",\r\n            \"Ebony\",\r\n            \"Synthetic Bone\",\r\n            \"Tektoid\",\r\n            \"Floyd Locking\",\r\n            \"Kahler Locking\",\r\n            \"Fender LSR Roller Nut\",\r\n        ],\r\n        frets: [\r\n            \"22 Medium Jumbo\",\r\n            \"21 Medium Jumbo\",\r\n            \"22 Medium\",\r\n            \"21 Medium\",\r\n            \"22 Medium Tall\",\r\n            \"21 Medium Tall\",\r\n            \"22 Jumbo\",\r\n            \"21 Jumbo\",\r\n        ],\r\n        pickups: [],\r\n        pickupConfiguration: [\r\n            \"HH\",\r\n            \"HHH\",\r\n            \"H\",\r\n            \"SSS\",\r\n            \"HSS\",\r\n            \"HSH\",\r\n            \"SS\",\r\n            \"HS\",\r\n            \"S\",\r\n        ],\r\n        pickguard: [\r\n            \"3-Ply White-Black-White\",\r\n            \"3-Ply Black-White-Black\",\r\n            \"Single-Ply Black\",\r\n            \"Single-Ply White\",\r\n            \"Mirror\",\r\n        ],\r\n        controls: [\r\n            \"1-Volume, 2-Tone\",\r\n            \"1-Volume, 1-Tone\",\r\n            \"2-Volume, 2-Tone\",\r\n            \"2-Volume, 1-Tone\",\r\n            \"One Master Volume\",\r\n        ],\r\n        switches: [\"3-Way Toggle Switch\", \"5-Way Blade Switch\"],\r\n        hardware: [\"Nickel\", \"Black\", \"Gold\", \"Aged Nickel\", \"Aged Gold\"],\r\n        tuningMachines: [],\r\n        bridge: [],\r\n        knobs: [\r\n            \"Black Top Hat\",\r\n            \"White Top Hat\",\r\n            \"Cream Top Hat\",\r\n            \"Amber Top Hat\",\r\n            \"Gold Top Hat\",\r\n            \"Black Speed\",\r\n            \"White Speed\",\r\n            \"Amber Speed\",\r\n            \"Gold Speed\",\r\n            \"Knurled Chrome Dome\",\r\n            \"Knurled Chrome\",\r\n            \"Knurled Gold Dome\",\r\n            \"Knurled Gold\",\r\n        ],\r\n        modifications: [],\r\n        otherFeatures: [\"Certificate of Authenticity\"],\r\n        stringGauge: [\"10-46\", \"9-42\"],\r\n        guitarCase: [\"Original Hard Shell Case\"],\r\n    };\r\n    const formDataPrettier = {\r\n        make: \"Make\",\r\n        model: \"Model\",\r\n        year: \"Year\",\r\n        finish: \"Finish\",\r\n        countryOfOrigin: \"Country of Origin\",\r\n        serial: \"Serial #\",\r\n        condition: \"Condition\",\r\n        weight: \"Weight\",\r\n        bodyType: \"Body Type\",\r\n        bodyWood: \"Body Wood\",\r\n        scaleLength: \"Scale Length\",\r\n        neckJoint: \"Neck Joint\",\r\n        neckWood: \"Neck Wood\",\r\n        neckFinish: \"Neck Finish\",\r\n        fingerBoard: \"Finger Board\",\r\n        radius: \"Neck Radius\",\r\n        neckProfile: \"Neck Profile\",\r\n        inlays: \"Inlays\",\r\n        nutWidth: \"Nut Width\",\r\n        nut: \"Nut\",\r\n        frets: \"Frets\",\r\n        pickups: \"Pickups\",\r\n        pickupConfiguration: \"Pickup Configuration\",\r\n        pickguard: \"Pickguard\",\r\n        controls: \"Controls\",\r\n        switches: \"Switch\",\r\n        hardware: \"Hardware\",\r\n        tuningMachines: \"Tuning Machines\",\r\n        bridge: \"Bridge\",\r\n        knobs: \"Knobs\",\r\n        modifications: \"Modifications\",\r\n        otherFeatures: \"Other Features\",\r\n        stringGauge: \"String Guage\",\r\n        guitarCase: \"Case\",\r\n    };\r\n    const [formOther, setFormOther] = useState({\r\n        make: \"\",\r\n        model: \"\",\r\n        year: \"\",\r\n        finish: \"\",\r\n        countryOfOrigin: \"\",\r\n        serial: \"\",\r\n        condition: \"\",\r\n        weight: \"\",\r\n        bodyType: \"\",\r\n        bodyWood: \"\",\r\n        scaleLength: \"\",\r\n        neckJoint: \"\",\r\n        neckWood: \"\",\r\n        neckFinish: \"\",\r\n        fingerBoard: \"\",\r\n        radius: \"\",\r\n        neckProfile: \"\",\r\n        inlays: \"\",\r\n        nutWidth: \"\",\r\n        nut: \"\",\r\n        frets: \"\",\r\n        pickups: \"\",\r\n        pickupConfiguration: \"\",\r\n        pickguard: \"\",\r\n        controls: \"\",\r\n        switches: \"\",\r\n        hardware: \"\",\r\n        tuningMachines: \"\",\r\n        bridge: \"\",\r\n        knobs: \"\",\r\n        modifications: \"\",\r\n        otherFeatures: \"\",\r\n        stringGauge: \"\",\r\n        guitarCase: \"\",\r\n    });\r\n    const [formData, setFormData] = useState({\r\n        make: \"\",\r\n        model: \"\",\r\n        year: \"\",\r\n        finish: \"\",\r\n        countryOfOrigin: \"\",\r\n        serial: \"\",\r\n        condition: \"\",\r\n        weight: \"\",\r\n        bodyType: \"\",\r\n        bodyWood: \"\",\r\n        scaleLength: \"\",\r\n        neckJoint: \"\",\r\n        neckWood: \"\",\r\n        neckFinish: \"\",\r\n        fingerBoard: \"\",\r\n        radius: \"\",\r\n        neckProfile: \"\",\r\n        inlays: \"\",\r\n        nutWidth: \"\",\r\n        nut: \"\",\r\n        frets: \"\",\r\n        pickups: \"\",\r\n        pickupConfiguration: \"\",\r\n        pickguard: \"\",\r\n        controls: \"\",\r\n        switches: \"\",\r\n        hardware: \"\",\r\n        tuningMachines: \"\",\r\n        bridge: \"\",\r\n        knobs: \"\",\r\n        modifications: \"\",\r\n        otherFeatures: \"\",\r\n        stringGauge: \"\",\r\n        guitarCase: \"\",\r\n    });\r\n\r\n    const handleFormChange = (e) => {\r\n        const register = e.target.name;\r\n        const value = e.target.value;\r\n        if (register.match(\"other.\") && !register.match(\"otherFeatures\")) {\r\n            const registerOther = register.split(\".\")[1];\r\n            // console.log('setting formOther')\r\n            setFormOther({ ...formOther, [registerOther]: value });\r\n            // console.log(formOther)\r\n        } else {\r\n            // console.log('setting formData')\r\n            setFormData({ ...formData, [register]: value });\r\n            // console.log(formData)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider\r\n            value={{\r\n                formData,\r\n                formDataPrettier,\r\n                formOptions,\r\n                formOther,\r\n                setFormData,\r\n                setFormOther,\r\n                handleFormChange,\r\n            }}\r\n        >\r\n            <div className=\"flex flex-col w-full min-h-screen px-12 pt-12 text-white bg-black bg-opacity-90\">\r\n                <form\r\n                    className=\"flex flex-row flex-wrap justify-between flex-1 pb-8 mx-auto md:w-11/12\"\r\n                    onSubmit={(e) => e.preventDefault()}\r\n                >\r\n                    {Object.keys(formData).map((d) => (\r\n                        <FormSelect name={d} key={d} />\r\n                    ))}\r\n                </form>\r\n                <Output className=\"flex-1 w-9/12 mx-auto\" />\r\n            </div>\r\n        </FormContext.Provider>\r\n    );\r\n};\r\n\r\nconst FormContext = createContext({\r\n    formData: {},\r\n    formOptions: {},\r\n    setFormData: () => {},\r\n    handleFormChange: () => {},\r\n});\r\n\r\nexport { FormContext };\r\n\r\nexport default Form;\r\n","import Form from './components/Form'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Form />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}